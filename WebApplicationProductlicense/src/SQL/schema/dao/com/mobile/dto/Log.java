/*
 * This file was generated - do not edit it directly !!
 * Generated by AuDAO tool, a product of Spolecne s.r.o.
 * For more information please visit http://www.spoledge.com
 */
package com.mobile.dto;

import java.sql.Timestamp;

import com.spoledge.audao.db.dto.AbstractDto;

/**
 * This is a DTO class.
 *
 * @author generated
 */
public class Log extends AbstractDto {

    ////////////////////////////////////////////////////////////////////////////
    // Static
    ////////////////////////////////////////////////////////////////////////////

    public static final String TABLE = "log";

    ////////////////////////////////////////////////////////////////////////////
    // Attributes
    ////////////////////////////////////////////////////////////////////////////

    private Integer logId;
    private Integer level;
    private String logger;
    private String message;
    private Integer sequence;
    private String sourceClass;
    private String sourceMethod;
    private Integer threadID;
    private Timestamp timeEntered;

    ////////////////////////////////////////////////////////////////////////////
    // Constructors
    ////////////////////////////////////////////////////////////////////////////

    /**
     * Creates a new empty DTO.
     */
    public Log() {
    }

    ////////////////////////////////////////////////////////////////////////////
    // Public
    ////////////////////////////////////////////////////////////////////////////

    public Integer getLogId() {
        return logId;
    }

    public void setLogId( Integer _val) {
        this.logId = _val;
    }

    public Integer getLevel() {
        return level;
    }

    public void setLevel( Integer _val) {
        this.level = _val;
    }

    public String getLogger() {
        return logger;
    }

    public void setLogger( String _val) {
        this.logger = _val;
    }

    public String getMessage() {
        return message;
    }

    public void setMessage( String _val) {
        this.message = _val;
    }

    public Integer getSequence() {
        return sequence;
    }

    public void setSequence( Integer _val) {
        this.sequence = _val;
    }

    public String getSourceClass() {
        return sourceClass;
    }

    public void setSourceClass( String _val) {
        this.sourceClass = _val;
    }

    public String getSourceMethod() {
        return sourceMethod;
    }

    public void setSourceMethod( String _val) {
        this.sourceMethod = _val;
    }

    public Integer getThreadID() {
        return threadID;
    }

    public void setThreadID( Integer _val) {
        this.threadID = _val;
    }

    public Timestamp getTimeEntered() {
        return timeEntered;
    }

    public void setTimeEntered( java.util.Date _val ) {
        setTimeEntered((Timestamp)( _val != null ? new Timestamp( _val.getTime()) : null ));
    }

    public void setTimeEntered( Timestamp _val) {
        this.timeEntered = _val;
    }

    /**
     * Indicates whether some other object is "equal to" this one.
     * Uses 'columns' equality type.
     */
    @Override
    public boolean equals( Object _other ) {
        if (_other == this) return true;
        if (_other == null || (!(_other instanceof Log))) return false;

        Log _o = (Log) _other;

        if ( logId == null ) {
            if ( _o.logId != null ) return false;
        }
        else if ( _o.logId == null || logId.intValue() != _o.logId.intValue()) return false;

        if ( level == null ) {
            if ( _o.level != null ) return false;
        }
        else if ( _o.level == null || level.intValue() != _o.level.intValue()) return false;

        if ( logger == null ) {
            if ( _o.logger != null ) return false;
        }
        else if ( _o.logger == null || !logger.equals( _o.logger )) return false;

        if ( message == null ) {
            if ( _o.message != null ) return false;
        }
        else if ( _o.message == null || !message.equals( _o.message )) return false;

        if ( sequence == null ) {
            if ( _o.sequence != null ) return false;
        }
        else if ( _o.sequence == null || sequence.intValue() != _o.sequence.intValue()) return false;

        if ( sourceClass == null ) {
            if ( _o.sourceClass != null ) return false;
        }
        else if ( _o.sourceClass == null || !sourceClass.equals( _o.sourceClass )) return false;

        if ( sourceMethod == null ) {
            if ( _o.sourceMethod != null ) return false;
        }
        else if ( _o.sourceMethod == null || !sourceMethod.equals( _o.sourceMethod )) return false;

        if ( threadID == null ) {
            if ( _o.threadID != null ) return false;
        }
        else if ( _o.threadID == null || threadID.intValue() != _o.threadID.intValue()) return false;

        if ( timeEntered == null ) {
            if ( _o.timeEntered != null ) return false;
        }
        else if ( _o.timeEntered == null || timeEntered.getTime() != _o.timeEntered.getTime()) return false;

        return true;
    }

    /**
     * Returns a hash code value for the object.
     */
    @Override
    public int hashCode() {
        int _ret = 76580; // = "Log".hashCode()
        _ret += logId == null ? 0 : logId;
        _ret = 29 * _ret + (level == null ? 0 : level);
        _ret = 29 * _ret + (logger == null ? 0 : logger.hashCode());
        _ret = 29 * _ret + (message == null ? 0 : message.hashCode());
        _ret = 29 * _ret + (sequence == null ? 0 : sequence);
        _ret = 29 * _ret + (sourceClass == null ? 0 : sourceClass.hashCode());
        _ret = 29 * _ret + (sourceMethod == null ? 0 : sourceMethod.hashCode());
        _ret = 29 * _ret + (threadID == null ? 0 : threadID);
        _ret = 29 * _ret + (timeEntered == null ? 0 : (int)timeEntered.getTime());

        return _ret;
    }


    ////////////////////////////////////////////////////////////////////////////
    // Protected
    ////////////////////////////////////////////////////////////////////////////
		
    /**
     * Constructs the content for the toString() method.
     */
    protected void contentToString(StringBuffer sb) {
        append( sb, "logId", logId );
        append( sb, "level", level );
        append( sb, "logger", logger );
        append( sb, "message", message );
        append( sb, "sequence", sequence );
        append( sb, "sourceClass", sourceClass );
        append( sb, "sourceMethod", sourceMethod );
        append( sb, "threadID", threadID );
        append( sb, "timeEntered", timeEntered );
    }
}
